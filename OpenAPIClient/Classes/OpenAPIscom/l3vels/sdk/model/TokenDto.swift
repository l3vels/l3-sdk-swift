//
// TokenDto.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

@available(*, deprecated, renamed: "OpenAPIClientAPI.TokenDto")
public typealias TokenDto = OpenAPIClientAPI.TokenDto

extension OpenAPIClientAPI {

public struct TokenDto: Codable, JSONEncodable, Hashable {

    /** Token ID to mint. You can provide this or asset_id */
    public var tokenId: Double?
    /** Asset ID to mint. You can provide this or token_id */
    public var assetId: String?
    /** Amount to mint */
    public var amount: Double

    public init(tokenId: Double? = nil, assetId: String? = nil, amount: Double) {
        self.tokenId = tokenId
        self.assetId = assetId
        self.amount = amount
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case tokenId = "token_id"
        case assetId = "asset_id"
        case amount
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(tokenId, forKey: .tokenId)
        try container.encodeIfPresent(assetId, forKey: .assetId)
        try container.encode(amount, forKey: .amount)
    }
}

}
